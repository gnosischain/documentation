"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[40579],{16847:(e,n,t)=>{t.d(n,{Ay:()=>l});var s=t(74848),r=t(28453),o=t(49489),a=t(7227);function i(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(o.A,{children:[(0,s.jsx)(a.A,{value:"execution",label:"execution",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"docker logs -f --tail 500 execution\n"})})}),(0,s.jsx)(a.A,{value:"consensus",label:"consensus",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"docker logs -f --tail 500 consensus\n"})})}),(0,s.jsx)(a.A,{value:"validator",label:"validator",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"docker logs -f --tail 500 validator\n"})})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}},58628:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var s=t(74848),r=t(28453),o=t(16847);const a={title:"Teku"},i="Run Validator: Teku",l={id:"node/manual/validator/run/teku",title:"Teku",description:"The Validator requires a Consensus client (also known as Beacon Node) in order to operate. See Step 3 Teku for more information.",source:"@site/docs/node/manual/validator/run/teku.md",sourceDirName:"node/manual/validator/run",slug:"/node/manual/validator/run/teku",permalink:"/node/manual/validator/run/teku",draft:!1,unlisted:!1,editUrl:"https://github.com/gnosischain/documentation/tree/main/docs/node/manual/validator/run/teku.md",tags:[],version:"current",lastUpdatedBy:"shuoer86",lastUpdatedAt:1698242087,formattedLastUpdatedAt:"Oct 25, 2023",frontMatter:{title:"Teku"},sidebar:"node",previous:{title:"Lodestar",permalink:"/node/manual/validator/run/lodestar"},next:{title:"Lighthouse",permalink:"/node/manual/validator/run/lighthouse"}},c={},d=[{value:"Option 1: Run as System Process",id:"system-process",level:2},{value:"Option 2: Run using Docker",id:"docker",level:2},{value:"1. Folder Structure",id:"1-folder-structure",level:3},{value:"2. Docker Compose",id:"2-docker-compose",level:3},{value:"3. Environment Variables",id:"3-environment-variables",level:3},{value:"4. Keystore Location",id:"4-keystore-location",level:3},{value:"5. Import Keystores",id:"5-import-keystores",level:3},{value:"6. Restart Containers",id:"6-restart-containers",level:3},{value:"7. Monitor Logs",id:"7-monitor-logs",level:3},{value:"8. Make a Deposit",id:"8-make-a-deposit",level:3},{value:"9. Updating your Node",id:"9-updating-your-node",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"run-validator-teku",children:"Run Validator: Teku"}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["The Validator requires a Consensus client (also known as Beacon Node) in order to operate. See ",(0,s.jsx)(n.a,{href:"/node/manual/beacon/teku",children:"Step 3: Run Beacon Node: Teku"})," for more information."]})}),"\n",(0,s.jsx)(n.h2,{id:"system-process",children:"Option 1: Run as System Process"}),"\n",(0,s.jsxs)(n.p,{children:["Refer to ",(0,s.jsx)(n.a,{href:"/node/manual/#step-4-run-a-validator",children:"Guide"})]}),"\n",(0,s.jsx)(n.h2,{id:"docker",children:"Option 2: Run using Docker"}),"\n",(0,s.jsx)(n.h3,{id:"1-folder-structure",children:"1. Folder Structure"}),"\n",(0,s.jsx)(n.p,{children:"Create new folders:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"mkdir -p /home/$USER/gnosis/consensus/validator/keys\nmkdir /home/$USER/gnosis/consensus/validator/passwords\nmkdir /home/$USER/gnosis/consensus/validator/slashprotection\n"})}),"\n",(0,s.jsx)(n.p,{children:"Including the folders from your Execution and Consensus clients, your folder structure should now look like:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"/home/$USER/gnosis/\n\u251c\u2500\u2500 jwtsecret/\n\u251c\u2500\u2500 execution/\n\u2514\u2500\u2500 consensus/\n    \u251c\u2500\u2500 beacon/\n    \u2514\u2500\u2500 validators/\n        \u251c\u2500\u2500 keys/\n        \u251c\u2500\u2500 passwords/\n        \u2514\u2500\u2500 slashprotection/\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-docker-compose",children:"2. Docker Compose"}),"\n",(0,s.jsxs)(n.p,{children:["Modify your docker-compose file with your favorite text editor and add the following commands to your ",(0,s.jsx)(n.code,{children:"consensus"})," container."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"      --validators-proposer-default-fee-recipient=$FEE_RECIPIENT\n      --validator-keys=/data/validator/keys:/data/validator/passwords\n      --validators-keystore-locking-enabled=true\n      --validators-graffiti=$GRAFFITI\n"})}),"\n",(0,s.jsx)(n.p,{children:"The file should now look like:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="/home/$USER/gnosis/docker-compose.yml" showLineNumbers',children:'version: "3"\nservices:\n\n  execution:\n    # From Step 2\n    # ...\n\n  consensus:\n    user: "${PUID:-1000}"\n    container_name: consensus\n    image: consensys/teku:latest\n    restart: always\n    networks:\n      - gnosis_net\n    ports:\n      - 9000:9000/tcp # p2p\n      - 9000:9000/udp # p2p\n      - 8008:8008/tcp # metrics\n    expose:\n      - 4000\n    volumes:\n      - /home/$USER/gnosis/consensus:/data\n      - /home/$USER/gnosis/jwtsecret/jwt.hex:/jwt.hex\n      - /etc/timezone:/etc/timezone:ro\n      - /etc/localtime:/etc/localtime:ro\n    environment:\n      - JAVA_OPTS=-Xmx4g\n    command: |\n      --network=gnosis\n      --data-base-path=/data\n      --data-storage-archive-frequency=2048\n      --data-storage-mode=PRUNE\n      --data-storage-non-canonical-blocks-enabled=false\n      --log-destination=CONSOLE\n      --logging=info\n      --p2p-enabled=true\n      --p2p-port=9000\n      --p2p-peer-upper-bound=50\n      --rest-api-enabled=true\n      --rest-api-host-allowlist=*\n      --rest-api-interface=0.0.0.0\n      --rest-api-port=4000\n      --rest-api-cors-origins=*\n      --rest-api-docs-enabled=false\n      --ee-endpoint=http://execution:8551\n      --ee-jwt-secret-file=/jwt.hex\n      --eth1-deposit-contract-max-request-size=8000\n      --metrics-enabled=true\n      --metrics-host-allowlist=*\n      --metrics-interface=0.0.0.0\n      --metrics-port=8008\n      --initial-state=https://checkpoint.gnosis.gateway.fm//eth/v2/debug/beacon/states/finalized\n# highlight-start\n      --validators-proposer-default-fee-recipient=$FEE_RECIPIENT\n      --validator-keys=/data/validator/keys:/data/validator/passwords\n      --validators-keystore-locking-enabled=true\n      --validators-graffiti=$GRAFFITI\n# highlight-end\n    logging:\n      driver: "local"\n\nnetworks:\n  gnosis_net:\n    name: gnosis_net\n'})}),"\n",(0,s.jsx)(n.h3,{id:"3-environment-variables",children:"3. Environment Variables"}),"\n",(0,s.jsxs)(n.p,{children:["Add an ",(0,s.jsx)(n.code,{children:".env"})," file with your fee recipient (your Gnosis address) and graffiti in ",(0,s.jsx)(n.code,{children:"/home/$USER/gnosis/.env"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="/home/$USER/gnosis/.env"',children:"PUID=1000\nFEE_RECIPIENT=0x0000000000000000000000000000000000000000\nGRAFFITI=gnosischain/teku\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Replace ",(0,s.jsx)(n.code,{children:"validators-proposer-default-fee-recipient"})," with your Gnosis address. This fee recipient address will receive tips from user transactions from the block the validator proposed. If not set, the tips will be sent to zero address, that is burnt competely. It is strongly recommended that you configure this value in your setup.\nLearn more about ",(0,s.jsx)(n.a,{href:"https://docs.teku.consensys.net/Reference/CLI/CLI-Syntax#validators-proposer-default-fee-recipient",children:"validators-proposer-default-fee-recipient"})," flag in Teku docs."]}),"\n",(0,s.jsxs)(n.p,{children:["Replace ",(0,s.jsx)(n.a,{href:"https://docs.teku.consensys.net/Reference/CLI/CLI-Syntax#validator-keys",children:(0,s.jsx)(n.code,{children:"validator-keys"})})," with the location where ",(0,s.jsx)(n.code,{children:"keystores- *.json"})," and ",(0,s.jsx)(n.code,{children:"keystore- *.txt"})," are stored."]}),"\n",(0,s.jsxs)(n.p,{children:["Replace ",(0,s.jsx)(n.a,{href:"https://docs.teku.consensys.net/Reference/CLI/CLI-Syntax#validators-graffiti",children:(0,s.jsx)(n.code,{children:"validators-graffiti"})})," with your own graffiti.  It is an optional field that can be used to add a message to the ",(0,s.jsx)(n.a,{href:"https://ethereum.org/en/developers/docs/blocks/",children:"block"})," by the proposer."]}),"\n",(0,s.jsxs)(n.p,{children:["Learn more about the CLI commands and their options ",(0,s.jsx)(n.a,{href:"https://docs.teku.consensys.net/en/latest/Reference/CLI/CLI-Syntax/",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"4-keystore-location",children:"4. Keystore Location"}),"\n",(0,s.jsxs)(n.p,{children:["Add your keystores in ",(0,s.jsx)(n.code,{children:"/home/$USER/gnosis/consensus/validator/keys/"})," and their password in a file ",(0,s.jsx)(n.code,{children:"/home/$USER/gnosis/consensus/validator/passwords"})," to get this file structure:"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["When specifying directories, Teku expects to find identically named keystore and password files. For each keystore file a corresponding password txt file is required. This is the case even if the password is the same for each validator. For example ",(0,s.jsx)(n.code,{children:"validator_217179e.json"})," and ",(0,s.jsx)(n.code,{children:"validator_217179e.txt"}),". (",(0,s.jsx)(n.a,{href:"https://docs.teku.consensys.net/en/latest/Reference/CLI/CLI-Syntax/#validator-keys",children:"source"}),")"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"/home/$USER/gnosis/\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 jwtsecret/\n\u251c\u2500\u2500 execution/\n\u2514\u2500\u2500 consensus/\n    \u251c\u2500\u2500 beacon/\n    \u2514\u2500\u2500 validators/\n# highlight-start\n        \u251c\u2500\u2500 keys/\n        \u2502\xa0\xa0 \u251c\u2500\u2500 keystore-001.json\n        \u2502 \xa0\xa0\u2514\u2500\u2500 keystore-002.json\n        \u251c\u2500\u2500 passwords/\n        \u2502\xa0\xa0 \u2514\u2500\u2500 keystore-001.txt\n        \u2502\xa0\xa0 \u2514\u2500\u2500 keystore-002.txt\n        \u2514\u2500\u2500 slashprotection/\n# highlight-end\n"})}),"\n",(0,s.jsx)(n.h3,{id:"5-import-keystores",children:"5. Import Keystores"}),"\n",(0,s.jsx)(n.p,{children:"Import your validators:"}),"\n",(0,s.jsxs)(n.p,{children:["When the Teku ",(0,s.jsx)(n.code,{children:"consensus"})," container starts, it will search the directories for keystores and passwords, and import them automatically."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["When specifying directories, Teku expects to find identically named keystore and password files. For each keystore file a corresponding password txt file is required. This is the case even if the password is the same for each validator. For example ",(0,s.jsx)(n.code,{children:"validator_217179e.json"})," and ",(0,s.jsx)(n.code,{children:"validator_217179e.txt"}),". (",(0,s.jsx)(n.a,{href:"https://docs.teku.consensys.net/en/latest/Reference/CLI/CLI-Syntax/#validator-keys",children:"source"}),")"]})}),"\n",(0,s.jsx)(n.h3,{id:"6-restart-containers",children:"6. Restart Containers"}),"\n",(0,s.jsx)(n.p,{children:"Restart the execution layer client and consensus layer client listed in the compose file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"cd /home/$USER/gnosis\ndocker-compose down\ndocker-compose up -d\n"})}),"\n",(0,s.jsx)(n.h3,{id:"7-monitor-logs",children:"7. Monitor Logs"}),"\n",(0,s.jsxs)(n.p,{children:["Check your logs for each service (",(0,s.jsx)(n.code,{children:"execution"}),", ",(0,s.jsx)(n.code,{children:"consensus"})," or ",(0,s.jsx)(n.code,{children:"validator"}),") with:"]}),"\n","\n","\n",(0,s.jsx)(o.Ay,{}),"\n",(0,s.jsx)(n.h3,{id:"8-make-a-deposit",children:"8. Make a Deposit"}),"\n",(0,s.jsx)(n.p,{children:"Make deposit once your node is fully synced (this can take a few hours depending on setup)."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"At this stage you should have your EL and CL fully synced and validators must be imported to your CL."})})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["See section ",(0,s.jsx)(n.strong,{children:"Fund Validator"})]})}),"\n",(0,s.jsx)(n.h3,{id:"9-updating-your-node",children:"9. Updating your Node"}),"\n",(0,s.jsx)(n.p,{children:"To update, just pull the new images, then stop and restart your docker-compose file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"cd /home/$USER/gnosis\ndocker-compose pull\ndocker-compose stop\ndocker-compose up -d\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},7227:(e,n,t)=>{t.d(n,{A:()=>a});t(96540);var s=t(18215);const r={tabItem:"tabItem_Ymn6"};var o=t(74848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,a),hidden:t,children:n})}},49489:(e,n,t)=>{t.d(n,{A:()=>b});var s=t(96540),r=t(18215),o=t(24245),a=t(56347),i=t(36494),l=t(62814),c=t(45167),d=t(81269);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:r}}=e;return{value:n,label:t,attributes:s,default:r}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,a.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(o),(0,s.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=h(e),[a,l]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:o}))),[c,u]=m({queryString:t,groupId:r}),[f,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,d.Dv)(t);return[r,(0,s.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),v=(()=>{const e=c??f;return p({value:e,tabValues:o})?e:null})();(0,i.A)((()=>{v&&l(v)}),[v]);return{selectedValue:a,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),x(e)}),[u,x,o]),tabValues:o}}var x=t(11062);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(74848);function y(e){let{className:n,block:t,selectedValue:s,selectValue:a,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),r=i[t].value;r!==s&&(c(n),a(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...o,className:(0,r.A)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:r}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function k(e){const n=f(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,g.jsx)(y,{...e,...n}),(0,g.jsx)(j,{...e,...n})]})}function b(e){const n=(0,x.A)();return(0,g.jsx)(k,{...e,children:u(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(96540);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);