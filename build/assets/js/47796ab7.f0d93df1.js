"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[66366],{55453:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>c,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var s=i(74848),l=i(28453);const t={title:"Core Devs Call - 2023/02/15",authors:["dapplion","armaganercan"],tags:["CoreDevsCall","gnosis"]},r="Gnosis Core Devs Call Notes",a={permalink:"/updates/2023/02/15/core-devs-call",source:"@site/updates/2023/02-15-core-devs-call.md",title:"Core Devs Call - 2023/02/15",description:"Hello everyone from the weekly Gnosis Core Devs Call. This meeting is repeated on Wednesday every week. Watch on Gnosis Chain YouTube channel. \u200d",date:"2023-02-15T00:00:00.000Z",formattedDate:"February 15, 2023",tags:[{label:"CoreDevsCall",permalink:"/updates/tags/core-devs-call"},{label:"gnosis",permalink:"/updates/tags/gnosis"}],readingTime:5.08,hasTruncateMarker:!1,authors:[{name:"Lion - dapplion",title:"Merge coordinator",url:"https://github.com/dapplion",imageURL:"https://avatars.githubusercontent.com/u/35266934",key:"dapplion"},{name:"0xarmagan",title:"Validator Comms Lead @ Gnosis",url:"https://github.com/0xarmagan",imageURL:"https://avatars.githubusercontent.com/u/75987728",key:"armaganercan"}],frontMatter:{title:"Core Devs Call - 2023/02/15",authors:["dapplion","armaganercan"],tags:["CoreDevsCall","gnosis"]},unlisted:!1,prevItem:{title:"Core Devs Call - 2023/02/22",permalink:"/updates/2023/02/22/core-devs-call"},nextItem:{title:"Core Devs Call - 2023/02/08",permalink:"/updates/2023/02/08/core-devs-call"}},o={authorsImageUrls:[void 0,void 0]},d=[{value:"Topics",id:"topics",level:3},{value:"Feb 15, 2023",id:"feb-15-2023",level:3}];function h(n){const e={a:"a",code:"code",h3:"h3",img:"img",input:"input",li:"li",p:"p",ul:"ul",...(0,l.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://i.imgur.com/hPdq9m8.png",alt:""})}),"\n",(0,s.jsxs)(e.p,{children:["Hello everyone from the weekly Gnosis Core Devs Call. This meeting is repeated on Wednesday every week. ",(0,s.jsx)(e.a,{href:"https://youtu.be/HjY2YjWolEY",children:"Watch"})," on Gnosis Chain YouTube channel. \u200d"]}),"\n",(0,s.jsx)(e.p,{children:"Participants: Erigon, Gateway, Nethermind, Geth, Gnosis DevOps, Gnosis Core Devs, Gnosis DevRels, Gnosis Comms team and the contributors."}),"\n",(0,s.jsx)(e.p,{children:"In the focus of this meeting, opinions on the implementation of withdrawals contract were evaluated. difficulties and solutions to current problems were discussed. also shared EL and CL team updates."}),"\n",(0,s.jsx)(e.h3,{id:"topics",children:"Topics"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Withdrawals Contract"}),"\n",(0,s.jsx)(e.li,{children:"\u201cNative\u201d GNO and mGNO"}),"\n",(0,s.jsx)(e.li,{children:"Core Devs Team updates"}),"\n",(0,s.jsx)(e.li,{children:"Client Team Update"}),"\n",(0,s.jsx)(e.li,{children:"Chain Infrastructure Updates"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"feb-15-2023",children:"Feb 15, 2023"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Withdrawals contract"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.notion.so/Shanghai-Capella-Withdrawals-13fa64960f304abbac23b73187436058",children:"https://www.notion.so/Shanghai-Capella-Withdrawals-13fa64960f304abbac23b73187436058"})}),"\n",(0,s.jsxs)(e.li,{children:["Create a PR with a semi-final implementation","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"API described in the spec"}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/gnosischain/deposit-contract/pull/25",children:"https://github.com/gnosischain/deposit-contract/pull/25"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Insolvency Case","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/gnosischain/deposit-contract/pull/25#discussion_r1107069076",children:"https://github.com/gnosischain/deposit-contract/pull/25#discussion_r1107069076"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["How many failed withdrawals should the system call process?","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Should it be hardcoded or a chain parameter?"}),"\n",(0,s.jsx)(e.li,{children:"Withdrawals are passed as calldata to the contract"}),"\n",(0,s.jsx)(e.li,{children:"Only way to fail is if there\u2019s not enough GNO in the contract -> withdrawal stored as failed"}),"\n",(0,s.jsx)(e.li,{children:"On every block, failed withdrawals are processed again, in case there\u2019s now enough GNO"}),"\n",(0,s.jsx)(e.li,{children:"The question is: how many of those failed withdrawals can we process per block to keep appropriate block times"}),"\n",(0,s.jsxs)(e.li,{children:["Martin: this situation should never happen ideally","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Lion: The withdrawal could also fail for other reasons because we\u2019re calling other contracts (?)"}),"\n",(0,s.jsxs)(e.li,{children:["Goes back to the discussion of whether there should be minting capabilities or not","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Not realistic to implement this in a timely fashion"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Daniel: would having two balances (xDAI + GNO) in execution layer (or CL)be an option?","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Probably too much work / maintenance to be worth it"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Guillaume: can we get rid of xDAI as native token?","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Replace it with GNO, and then we basically move to the standard Ethereum way"}),"\n",(0,s.jsx)(e.li,{children:"Martin: Probably not viable"}),"\n",(0,s.jsxs)(e.li,{children:["Is this good for the chain?","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Would force users to convert their $ into GNO"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Would it even be feasible?","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"xDAI (or wrapper xDAI) is used in many contracts, where it might be assumed that the native currency is worth a dollar"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"Dan: Move xDai balances into ERC-20 registry?"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"Could we mint something on withdrawals that would allow users to get their original GNO back on Ethereum"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Need to work with Comms team on instruction guides for community","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["0x00 addresses can\u2019t withdraw, so these addresses would need to be converted","\n",(0,s.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","Do we need to build tooling for this?"]}),"\n",(0,s.jsx)(e.li,{children:"Prysm has something for this -"}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://notes.ethereum.org/@launchpad/withdrawals-faq",children:"Check Ethereum Withdrawals FAQ"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["16 validators withdrawals can be processed per block","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Dapplion: More withdrawals per block = higher load on processing. Could EL devs benchmark the cost of a withdrawal in gnosis?"}),"\n",(0,s.jsx)(e.li,{children:"Cost of withdrawal is more expensive in Gnosis because withdrawals are implemented in EL"}),"\n",(0,s.jsx)(e.li,{children:"Marek: best way is to start the devnet and observe block processing time with withdrawals"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"\u201cNative\u201d GNO"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Ihor: Could lead to bad economical effect","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Martin: We\u2019re removing the ability of the bridge to mint unlimited GNO on Gnosis\u2019 side, which should only increase security"}),"\n",(0,s.jsx)(e.li,{children:"Would be putting the burn promise in code by only having 3m tokens on Gnosis side"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Need to upgrade Bridge Contracts (?)","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Omnibridge cannot mint addition GNO.gnosis, needs custom code to pull from 3mn minted"}),"\n",(0,s.jsx)(e.li,{children:"GNO.ethereum <> GNO.gnosis (from 3mn) thru 3rd party bridges"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["What\u2019s the current plan of releasing GNO rewards on beacon chain?","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Right now we can just increase the storage slot in the GNO smart contract on the execution layer side so the token doesn\u2019t need to be upgraded for minting","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Igor: That has to be done on the execution layer anyways"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["The way this works on Ethereum is just to increase the native balance (no contract interaction)","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"The idea is to call a contract that does it (Ihor\u2019s withdrawal contract) instead of hacking it together"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Dapplion","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Thinks it\u2019s a good idea"}),"\n",(0,s.jsx)(e.li,{children:"But would probably require a team that would dive into this to make sure everything work as it should and analyze how feasible this is"}),"\n",(0,s.jsx)(e.li,{children:"To be considered for inclusion in future hardfork"}),"\n",(0,s.jsx)(e.li,{children:"Basically we need expertise on this"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"Let\u2019s do an assessment of whether this is doable or not and how much time it would take"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"mGNO"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Should it be \u201cuser-facing\u201d?"}),"\n",(0,s.jsx)(e.li,{children:"Should we get rid of it?"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Client Team Updates"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["EL","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Nethermind","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Dan: ",(0,s.jsx)(e.a,{href:"https://www.notion.so/Issue-Transfer-beyond-Balance-Bug-for-Nethermind-2418ed72b2ac414c8541fca1d2d7827c",children:"https://www.notion.so/Issue-Transfer-beyond-Balance-Bug-for-Nethermind-2418ed72b2ac414c8541fca1d2d7827c"})]}),"\n",(0,s.jsx)(e.li,{children:"Will be released in v1.18 \ud83e\udd73"}),"\n",(0,s.jsx)(e.li,{children:"Going to launch a testnet today or tomorrow"}),"\n",(0,s.jsx)(e.li,{children:"Updated the withdrawal code for the function name"}),"\n",(0,s.jsx)(e.li,{children:"Transaction pool issue will be released in 1.18 because it\u2019s not critical"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Erigon","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Looking into Chiado connectivity issues"}),"\n",(0,s.jsx)(e.li,{children:"Nethermind might privilege Nethermind nodes, meaning that they might drop Erigon nodes that are \u201cuseless\u201d"}),"\n",(0,s.jsxs)(e.li,{children:["Nethermind doesn\u2019t think that\u2019s the case and will investigate this","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"--Network.DiagTracerEnabled true"})," can be used for debugging"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"Progress on light CL"}),"\n",(0,s.jsx)(e.li,{children:"Stable as a read-only node"}),"\n",(0,s.jsxs)(e.li,{children:["For validators: treat with caution","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Misses more attestations than Nethermind and Geth on mainnet"}),"\n",(0,s.jsx)(e.li,{children:"Sometimes gets stuck, but not for long"}),"\n",(0,s.jsxs)(e.li,{children:["From Lukasz, regarding useless peers","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Invalid NetworkId"}),"\n",(0,s.jsx)(e.li,{children:"Capabilities not matched"}),"\n",(0,s.jsx)(e.li,{children:"TxFlooding (we are spammed with transaction broadcasts)"}),"\n",(0,s.jsx)(e.li,{children:"When someone tries to snap sync from us (as we don't implement snap-server)"}),"\n",(0,s.jsx)(e.li,{children:"There\u2019s also another issue that Lukasz is investigating"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Geth","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"No update"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Consensus Layer"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Prysm"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Merged the changes"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Nimbus (Philippe Schommers)"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["ghcr.io/filoozom/gnosis-nimbus-eth2",":latest","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Not used by the public yet"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Gnosis deployed some nodes for testing and Erigon CL"}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Housekeeping"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Chain infra"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Gateway","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Been running an Erigon archival node on Gnosis","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"All the nodes were stuck on the same block number"}),"\n",(0,s.jsx)(e.li,{children:"Indexing"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"Figuring out re-org"}),"\n",(0,s.jsx)(e.li,{children:"The RPC test is going fine"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Additional Workstreams (will join this call in the future)"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Shutterized Beacon Chain"}),"\n",(0,s.jsx)(e.li,{children:"Account Abstraction"}),"\n"]}),"\n"]}),"\n"]})]})}function c(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(h,{...n})}):h(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>a});var s=i(96540);const l={},t=s.createContext(l);function r(n){const e=s.useContext(t);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:r(n.components),s.createElement(t.Provider,{value:e},n.children)}}}]);