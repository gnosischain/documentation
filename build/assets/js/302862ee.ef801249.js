"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[14134],{60268:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=n(74848),a=n(28453);const o={description:"web3.js is a collection of libraries that allow you to interact with a local or remote Ethereum node using HTTP, IPC or WebSocket.",keywords:["web3.js","library","web3","javascript","package"]},r="Using Web3.js",i={id:"developers/interact/web3-js",title:"Using Web3.js",description:"web3.js is a collection of libraries that allow you to interact with a local or remote Ethereum node using HTTP, IPC or WebSocket.",source:"@site/docs/developers/interact/web3-js.md",sourceDirName:"developers/interact",slug:"/developers/interact/web3-js",permalink:"/developers/interact/web3-js",draft:!1,unlisted:!1,editUrl:"https://github.com/gnosischain/documentation/tree/main/docs/developers/interact/web3-js.md",tags:[],version:"current",lastUpdatedBy:"Ale Banzas",lastUpdatedAt:1669916231,formattedLastUpdatedAt:"Dec 1, 2022",frontMatter:{description:"web3.js is a collection of libraries that allow you to interact with a local or remote Ethereum node using HTTP, IPC or WebSocket.",keywords:["web3.js","library","web3","javascript","package"]},sidebar:"developers",previous:{title:"MetaMask API",permalink:"/developers/interact/metamask"},next:{title:"Using Ethers.js",permalink:"/developers/interact/ethers-js"}},c={},l=[{value:"Adding web3.js to your Project",id:"adding-web3js-to-your-project",level:2},{value:"Interacting with a Contract",id:"interacting-with-a-contract",level:2},{value:"Setting Gnosis as a Custom Chain",id:"setting-gnosis-as-a-custom-chain",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components},{TabItem:n,Tabs:o}=t;return n||u("TabItem",!0),o||u("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"using-web3js",children:"Using Web3.js"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://web3js.readthedocs.io/en/v1.7.5/web3.html",children:"web3.js"})," is a collection of libraries that allow you to interact with a local or remote Ethereum node using HTTP, IPC or WebSocket. Since Gnosis and Ethereum are very similar, web3.js can also be used in the same way. This page will go over some of the basics to get started. The web3.js docs have a lot more on the full features and functionality of the library and can be found ",(0,s.jsx)(t.a,{href:"https://web3js.readthedocs.io/en/v1.7.5/",children:"here"}),". You can view RPCs to connect to ",(0,s.jsx)(t.a,{href:"/tools/rpc/",children:"here"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"adding-web3js-to-your-project",children:"Adding web3.js to your Project"}),"\n",(0,s.jsxs)(o,{groupId:"package-manager",children:[(0,s.jsx)(n,{value:"yarn",label:"yarn",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"yarn add web3\n"})})}),(0,s.jsx)(n,{value:"npm",label:"npm",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm install web3\n"})})}),(0,s.jsx)(n,{value:"pure js",label:"purejs",children:(0,s.jsxs)(t.p,{children:["Link the ",(0,s.jsx)(t.code,{children:"dist/web3.min.js"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["After installing, you need to create a web3 instance and set a provider. Most Ethereum supported wallets, such as MetaMask, have an ",(0,s.jsx)(t.a,{href:"https://eips.ethereum.org/EIPS/eip-1193",children:"EIP-1193"})," compliant provider at ",(0,s.jsx)(t.code,{children:"window.ethereum"}),". This works for connecting to Gnosis as well."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"// From web3.js docs:\r\n// In Node.js use: const Web3 = require('web3');\r\n\r\nconst web3 = new Web3(Web3.givenProvider);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"interacting-with-a-contract",children:"Interacting with a Contract"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://web3js.readthedocs.io/en/v1.7.5/web3-eth-contract.html",children:"Official Docs here"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"To connect to and interact with a deployed contract, you can do the following:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"var contract = new web3.eth.Contract(jsonInterface[, address][, options])\n"})}),"\n",(0,s.jsxs)(t.p,{children:["More on the parameters ",(0,s.jsx)(t.a,{href:"https://web3js.readthedocs.io/en/v1.7.5/web3-eth-contract.html#new-contract",children:"here"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"setting-gnosis-as-a-custom-chain",children:"Setting Gnosis as a Custom Chain"}),"\n",(0,s.jsxs)(t.p,{children:["When using web3.js, the default chain for signing transactions locally will be Ethereum mainnet. You can, however, ",(0,s.jsx)(t.a,{href:"https://web3js.readthedocs.io/en/v1.7.5/web3-eth.html#id19",children:"set a custom chain using the default common property"}),":"]}),"\n",(0,s.jsxs)(o,{groupId:"networks",children:[(0,s.jsx)(n,{value:"chiado",label:"Chiado Testnet",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"web3.eth.defaultCommon = {customChain: {name: 'Chiado Testnet', chainId: 10200, networkId: 10200}};\n"})})}),(0,s.jsx)(n,{value:"gnosis",label:"Gnosis Mainnet",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"web3.eth.defaultCommon = {customChain: {name: 'Gnosis', chainId: 100, networkId: 100}};\n"})})})]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var s=n(96540);const a={},o=s.createContext(a);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);