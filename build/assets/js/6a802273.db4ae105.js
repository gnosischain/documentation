"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[81634],{34548:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var o=n(74848),r=n(28453);const i={description:"In the following tutorial we will go through a step-by-step guide on how to deploy a Basic Contract to Gnosis",keywords:["deploy dapp","full stack app","tutorial","web3","dapp development"]},s="Deploying a Basic Contract",a={id:"developers/building/first-contract",title:"Deploying a Basic Contract",description:"In the following tutorial we will go through a step-by-step guide on how to deploy a Basic Contract to Gnosis",source:"@site/docs/developers/building/first-contract.md",sourceDirName:"developers/building",slug:"/developers/building/first-contract",permalink:"/developers/building/first-contract",draft:!1,unlisted:!1,editUrl:"https://github.com/gnosischain/documentation/tree/main/docs/developers/building/first-contract.md",tags:[],version:"current",lastUpdatedBy:"Dee",lastUpdatedAt:1705404574,formattedLastUpdatedAt:"Jan 16, 2024",frontMatter:{description:"In the following tutorial we will go through a step-by-step guide on how to deploy a Basic Contract to Gnosis",keywords:["deploy dapp","full stack app","tutorial","web3","dapp development"]},sidebar:"developers",previous:{title:"OmniBridge Basics",permalink:"/bridges/tutorials/using-omnibridge/"},next:{title:"Full Stack Dapp",permalink:"/developers/building/full-stack-dapp"}},l={},d=[{value:"Tutorials",id:"tutorials",level:2},{value:"Hardhat Deployment",id:"hardhat-deployment",level:3},{value:"Truffle Deployment",id:"truffle-deployment",level:3}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"deploying-a-basic-contract",children:"Deploying a Basic Contract"}),"\n",(0,o.jsxs)(t.p,{children:["Gnosis is an EVM based chain, meaning deployment steps are the same as deployment to Ethereum or other chains. Check the ",(0,o.jsx)(t.a,{href:"/concepts/networks/",children:"network specifications"}),"."]}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["You will also need a ",(0,o.jsx)(t.a,{href:"/tools/faucets",children:"small amount of xDai"})," to deploy a contract, and for any contract functions.\r\nFor testing purposes, it is recommended to first deploy to ",(0,o.jsx)(t.a,{href:"/concepts/networks/chiado",children:"Chiado testnet"}),". After functionality is tested and confirmed, deploy to Gnosis mainnet."]})}),"\n",(0,o.jsx)(t.h2,{id:"tutorials",children:"Tutorials"}),"\n",(0,o.jsxs)(t.p,{children:["In general you can choose almost any development environment you wish as they all have their own benefits. A few of the most used environments are shown below. Using the ",(0,o.jsx)(t.a,{href:"https://ethereum.org/en/developers/tutorials/hello-world-smart-contract/",children:"official ethereum documentation"}),", you can change the network to Gnosis and deploy a hello world contract."]}),"\n",(0,o.jsx)(t.h3,{id:"hardhat-deployment",children:"Hardhat Deployment"}),"\n",(0,o.jsxs)(t.p,{children:["Following the ",(0,o.jsx)(t.a,{href:"https://hardhat.org/hardhat-runner/docs/guides/project-setup",children:"Official Hardhat documentation"}),", also how to ",(0,o.jsx)(t.a,{href:"/developers/smart-contracts/hardhat",children:"configure Hardhat to Gnosis"}),"."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["For Gnosis network Config, you have to export an object from ",(0,o.jsx)(t.code,{children:"hardhat.config.js"})]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"networks"})," config field an optional object where network names map to their configuration."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["There are two kinds of networks in Hardhat: ",(0,o.jsx)(t.a,{href:"https://eth.wiki/json-rpc/API",children:"JSON-RPC"})," based networks, and the built-in Hardhat Network."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["You can customize which network is used by default when running Hardhat by setting the config's ",(0,o.jsx)(t.code,{children:"defaultNetwork"})," field. If you omit this config, its default value is ",(0,o.jsx)(t.code,{children:'"hardhat"'}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"truffle-deployment",children:"Truffle Deployment"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://kauri.io/#collections/POA%20Tutorial%20series/poa-part-1-develop-and-deploy-a-smart-contract/",children:"This Tutorial on Kauri"})," shows how to deploy a DApp to the test network. It can be adapted to the Gnosis network with a few minor tweaks."]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"For Gnosis, edit the truffle.js file to the following:"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",metastring:"showLineNumbers",children:'require(\'dotenv\').config();\r\nconst HDWalletProvider = require(\'truffle-hdwallet-provider\');\r\n\r\nmodule.exports = {\r\n// See <http://truffleframework.com/docs/advanced/configuration>\r\n// for more about customizing your Truffle configuration!\r\n    networks: {\r\n        gnosis: {\r\n            provider: function() {\r\n                    return new HDWalletProvider(\r\n                process.env.MNEMONIC,\r\n                "https://rpc.gnosischain.com")\r\n            },\r\n            network_id: 100,\r\n            gas: 500000,\r\n            gasPrice: 1000000000\r\n        },\r\n        development: {\r\n            host: "127.0.0.1",\r\n            port: 8545,\r\n            network_id: "*" // Match any network id\r\n        }\r\n    }\r\n};\n'})}),"\n",(0,o.jsxs)(t.ol,{start:"2",children:["\n",(0,o.jsx)(t.li,{children:"Run the Truffle deployment to Gnosis."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"truffle migrate --network gnosis\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var o=n(96540);const r={},i=o.createContext(r);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);