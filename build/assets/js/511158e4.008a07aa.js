"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4971],{94561:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var s=i(74848),r=i(28453);const n={title:"Roadmap",description:"Gnosis is investing significant resources into trust-minimization of its Bridges, to ensure trust and safety of users.",keywords:["bridge roadmap","trustless bridge","light client","zksnark"]},a=void 0,o={id:"bridges/roadmap",title:"Roadmap",description:"Gnosis is investing significant resources into trust-minimization of its Bridges, to ensure trust and safety of users.",source:"@site/docs/bridges/roadmap.md",sourceDirName:"bridges",slug:"/bridges/roadmap",permalink:"/bridges/roadmap",draft:!1,unlisted:!1,editUrl:"https://github.com/gnosischain/documentation/tree/main/docs/bridges/roadmap.md",tags:[],version:"current",lastUpdatedBy:"zengzengzenghuy",lastUpdatedAt:1678783172,formattedLastUpdatedAt:"Mar 14, 2023",frontMatter:{title:"Roadmap",description:"Gnosis is investing significant resources into trust-minimization of its Bridges, to ensure trust and safety of users.",keywords:["bridge roadmap","trustless bridge","light client","zksnark"]},sidebar:"bridges",previous:{title:"Audits",permalink:"/bridges/audits"},next:{title:"Introduction",permalink:"/bridges/hashi/"}},d={},c=[{value:"&quot;Proof-of-Deposit&quot; Validity Proofs",id:"proof-of-deposit-validity-proofs",level:3},{value:"Hashi - A cross chain protocol based on distributed trust of the underlying security mechanisms",id:"hashi---a-cross-chain-protocol-based-on-distributed-trust-of-the-underlying-security-mechanisms",level:3}];function h(e){const t={a:"a",em:"em",h3:"h3",img:"img",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Gnosis is investing significant resources into trust-minimization of its Bridges, to ensure trust and safety of users."}),"\n",(0,s.jsx)(t.h3,{id:"proof-of-deposit-validity-proofs",children:'"Proof-of-Deposit" Validity Proofs'}),"\n",(0,s.jsx)(t.p,{children:'One emergent idea is to require Bridge Validators to provide a "proof-of-deposit" to the receiving bridge contract, as a proof that funds were indeed deposited in the origin chain. This can be done through a variety of cryptographic signature schemes.'}),"\n",(0,s.jsxs)(t.p,{children:["Gnosis has provided a $600k grant to ",(0,s.jsx)(t.a,{href:"https://0xparc.org/",children:"0xParc"})," to fund R&D into a zkSNARK-enabled light client, a necessary part of a trust-minimized bridge (see ",(0,s.jsx)(t.a,{href:"https://forum.gnosis.io/t/gip-57-should-gnosis-dao-support-research-of-a-zksnark-enabled-light-client-and-bridge/5421",children:"GIP-57 proposal"}),")."]}),"\n",(0,s.jsxs)(t.p,{children:["There is an additional effort by the original xDai team into ",(0,s.jsx)(t.a,{href:"https://forum.gnosis.io/t/gip-57-should-gnosis-dao-support-research-of-a-zksnark-enabled-light-client-and-bridge/5421/15?u=dan-gnosis",children:"BLS-signature based trustless bridge"}),", as an alternative to a SNARKs."]}),"\n",(0,s.jsx)(t.h3,{id:"hashi---a-cross-chain-protocol-based-on-distributed-trust-of-the-underlying-security-mechanisms",children:"Hashi - A cross chain protocol based on distributed trust of the underlying security mechanisms"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Expected release in Q2 2023"})}),"\n",(0,s.jsxs)(t.p,{children:["Hashi is an EVM Header Oracle Aggregator, designed to facilitate a\xa0",(0,s.jsx)(t.a,{href:"https://ethresear.ch/t/a-principled-approach-to-bridges/14725?u=auryn",children:"principled approach to cross-chain bridge security"}),". The primary insight being that the vast majority of bridge-related security incidents could have had minimal impact if the systems relying on them had built in some redundancy."]}),"\n",(0,s.jsx)(t.p,{children:"This means not completely trusting ANY bridge mechanism and, instead, distributing our trust among many parallel mechanisms."}),"\n",(0,s.jsx)(t.p,{children:"Each bridge mechanism is treated as an oracle for any given header. Users choose which combination of bridges to trust and how many must agree."}),"\n",(0,s.jsxs)(t.p,{children:["Orcale examples: Any Arbitrary Message Bridge, such as Wormhole or our own AMB, ZKP light client based implementations, such as SuccinctLabs, ",(0,s.jsx)(t.a,{href:"https://github.com/metacraft-labs/DendrETH",children:"https://github.com/metacraft-labs/DendrETH"})," and zkBridge."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Hashi Architecture",src:i(85431).A+"",width:"2000",height:"713"})}),"\n",(0,s.jsx)(t.p,{children:"After successful audits and release, we aim to gradually migrate our canonical bridges to Hashi\u2019s distributed trust model."})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},85431:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/Hashi-architecture-21e3e38b10c8e8322c37f24b81b19349.png"},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>o});var s=i(96540);const r={},n=s.createContext(r);function a(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);