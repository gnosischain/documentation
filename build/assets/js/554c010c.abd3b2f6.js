"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[80728],{7213:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>l});var n=a(74848),o=a(28453);const c={description:"Gelato is web3\u2019s decentralized backend empowering builders to create augmented smart contracts that are automated, gasless & off-chain aware on all major EVM-compatible blockchains.",keywords:["gelato","account-abstraction"]},i="Building Account Abstraction with Gelato",s={id:"Technical-Guides/account-abstraction/gelato",title:"Building Account Abstraction with Gelato",description:"Gelato is web3\u2019s decentralized backend empowering builders to create augmented smart contracts that are automated, gasless & off-chain aware on all major EVM-compatible blockchains.",source:"@site/docs/Technical-Guides/account-abstraction/gelato.md",sourceDirName:"Technical-Guides/account-abstraction",slug:"/Technical-Guides/account-abstraction/gelato",permalink:"/Technical-Guides/account-abstraction/gelato",draft:!1,unlisted:!1,editUrl:"https://github.com/gnosischain/documentation/tree/main/docs/Technical-Guides/account-abstraction/gelato.md",tags:[],version:"current",lastUpdatedBy:"Vanshika",lastUpdatedAt:1708167281,formattedLastUpdatedAt:"Feb 17, 2024",frontMatter:{description:"Gelato is web3\u2019s decentralized backend empowering builders to create augmented smart contracts that are automated, gasless & off-chain aware on all major EVM-compatible blockchains.",keywords:["gelato","account-abstraction"]}},r={},l=[];function d(t){const e={h1:"h1",p:"p",...(0,o.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"building-account-abstraction-with-gelato",children:"Building Account Abstraction with Gelato"}),"\n",(0,n.jsx)(e.p,{children:"TO DO"})]})}function u(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}},28453:(t,e,a)=>{a.d(e,{R:()=>i,x:()=>s});var n=a(96540);const o={},c=n.createContext(o);function i(t){const e=n.useContext(c);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:i(t.components),n.createElement(c.Provider,{value:e},t.children)}}}]);