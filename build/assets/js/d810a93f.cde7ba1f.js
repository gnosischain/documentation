"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[18073],{54099:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var s=t(74848),i=t(28453);const o={title:"Core Devs Call - 2023/04/19",authors:["dapplion","armaganercan"],tags:["CoreDevsCall","gnosis"]},r="Gnosis Core Devs Call Notes",a={permalink:"/updates/2023/04/19/core-devs-call",source:"@site/updates/2023/04-19-core-devs-call.md",title:"Core Devs Call - 2023/04/19",description:"Greetings everyone, and welcome to the weekly Gnosis Core Devs Call. Just a quick reminder that this meeting takes place every Wednesday.",date:"2023-04-19T00:00:00.000Z",formattedDate:"April 19, 2023",tags:[{label:"CoreDevsCall",permalink:"/updates/tags/core-devs-call"},{label:"gnosis",permalink:"/updates/tags/gnosis"}],readingTime:1.945,hasTruncateMarker:!1,authors:[{name:"Lion - dapplion",title:"Merge coordinator",url:"https://github.com/dapplion",imageURL:"https://avatars.githubusercontent.com/u/35266934",key:"dapplion"},{name:"0xarmagan",title:"Validator Comms Lead @ Gnosis",url:"https://github.com/0xarmagan",imageURL:"https://avatars.githubusercontent.com/u/75987728",key:"armaganercan"}],frontMatter:{title:"Core Devs Call - 2023/04/19",authors:["dapplion","armaganercan"],tags:["CoreDevsCall","gnosis"]},unlisted:!1,prevItem:{title:"Core Devs Call - 2023/04/26",permalink:"/updates/2023/04/26/core-devs-call"},nextItem:{title:"Core Devs Call - 2023/04/12",permalink:"/updates/2023/04/12/core-devs-call"}},l={authorsImageUrls:[void 0,void 0]},c=[{value:"EL",id:"el",level:2},{value:"CL",id:"cl",level:2}];function h(e){const n={a:"a",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://i.imgur.com/yWkAFed.png",alt:""})}),"\n",(0,s.jsx)(n.p,{children:"Greetings everyone, and welcome to the weekly Gnosis Core Devs Call. Just a quick reminder that this meeting takes place every Wednesday."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://youtu.be/LInX7dJJ6Ak",children:"Watch full record on YouTube"})}),"\n",(0,s.jsx)(n.p,{children:"Participants: Erigon, Gateway, Nethermind, Geth, Gnosis DevOps, Gnosis Core Devs, Gnosis DevRels, Gnosis Comms team and the contributors."}),"\n",(0,s.jsx)(n.p,{children:"April 19, 2023"}),"\n",(0,s.jsx)(n.h1,{id:"client-team-updates",children:"Client Team Updates"}),"\n",(0,s.jsx)(n.h2,{id:"el",children:"EL"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Nethermind"}),": No updates."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Erigon"}),": No updates."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Geth"}),": Was able to import the state (simulate snap sync)Is now starting the node in full sync, but it\u2019s not connecting / downloading blocks. Once this is done, Guillaume should have a working prototype"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"cl",children:"CL"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prysm"}),": No updates."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Nimbus"}),": No updates."]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"chain-infra",children:"Chain Infra"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Gateway"})}),"\n",(0,s.jsx)(n.p,{children:"No peers found on Devnet (probably just the different genesis)."}),"\n",(0,s.jsx)(n.h1,{id:"devnet",children:"Devnet"}),"\n",(0,s.jsxs)(n.p,{children:["Wrong configuration was shared. There\u2019s now a mismatch for outside nodes. There\u2019s no Erigon node running at this point. 80% attestation rate (all nodes ran by Nethermind) Shapella went through\n",(0,s.jsx)(n.strong,{children:"Lion: does Nethermind have metrics for the network?"}),"\nI.e. withdrawal amounts per block etc. Apparently not.\nMight potentially be added. Most credentials are still 0x00. Meaning that no withdrawals are currently happening."]}),"\n",(0,s.jsx)(n.h1,{id:"research",children:"Research"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Churn coefficient"}),"\n",(0,s.jsx)(n.a,{href:"https://hackmd.io/@dapplion/gnosis-churn-limit",children:"https://hackmd.io/@dapplion/gnosis-churn-limit"}),"\nDefines the number of validators that can join or exit the network in a specific time frame. On Gnosis that number is a bit high, meaning that it would theoretically be possible to get a big stake in the network very quickly. This would require a consensus client code change. Technically a change on the deposit contract could also limit inflow. But that break a lot of assumptions. It doesn\u2019t change anything in the case of outflows.Attacking the light client bridge is exclusively an inflow problem"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Shutterized Beacon Chain: is there progress?"}),"\nWe\u2019ve got more precise specs on a PR\n",(0,s.jsx)(n.a,{href:"https://github.com/gnosischain/specs/pull/4",children:"https://github.com/gnosischain/specs/pull/4"}),"\nLion: how specific do you need the spec to be? It seems like EL clients have more lax requirements for specs, is that true? On CL everything is specced quite precisely."]}),"\n",(0,s.jsx)(n.h1,{id:"tests",children:"Tests"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Hive"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Will start writing Hive tests by the end of this week\nImproving the genesis loading for Erigon and Nethermind, but hasn\u2019t been tested on Erigon yet.\n",(0,s.jsx)(n.strong,{children:"Lion: can we agree on which conditions tests would be considered good enough to move to testnet / mainnet?"}),"\nRuben thinks it would be enough if we can just run the contract specific parts (balances etc)"]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);