"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[89747],{86512:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var t=e(74848),o=e(28453);const s={title:"Using Hardhat",description:"Using Hardhat with Gnosis",keywords:["Hardhat","Gnosis","Deployment","Smart","Chain","Contract","EVM","Ethereum","Guide"]},a="Using Hardhat",i={id:"developers/smart-contracts/hardhat",title:"Using Hardhat",description:"Using Hardhat with Gnosis",source:"@site/docs/developers/smart-contracts/hardhat.md",sourceDirName:"developers/smart-contracts",slug:"/developers/smart-contracts/hardhat",permalink:"/developers/smart-contracts/hardhat",draft:!1,unlisted:!1,editUrl:"https://github.com/gnosischain/documentation/tree/main/docs/developers/smart-contracts/hardhat.md",tags:[],version:"current",lastUpdatedBy:"Pierre Grimaud",lastUpdatedAt:1689254308,formattedLastUpdatedAt:"Jul 13, 2023",frontMatter:{title:"Using Hardhat",description:"Using Hardhat with Gnosis",keywords:["Hardhat","Gnosis","Deployment","Smart","Chain","Contract","EVM","Ethereum","Guide"]},sidebar:"developers",previous:{title:"Using Truffle",permalink:"/developers/smart-contracts/truffle"},next:{title:"Using Foundry",permalink:"/developers/smart-contracts/foundry"}},c={},d=[{value:"Config Hardhat for Gnosis",id:"config-hardhat-for-gnosis",level:2},{value:"Compile your contract",id:"compile-your-contract",level:2},{value:"Deploy your contract",id:"deploy-your-contract",level:2},{value:"Verify Contract",id:"verify-contract",level:2},{value:"Additional Hardhat Documentation",id:"additional-hardhat-documentation",level:2}];function h(n){const r={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components},{TabItem:e,Tabs:s}=r;return e||p("TabItem",!0),s||p("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"using-hardhat",children:"Using Hardhat"}),"\n",(0,t.jsx)(r.p,{children:"Hardhat is a development environment used for smart contract compiling, deploying, testing and debugging."}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.a,{href:"https://hardhat.org/hardhat-runner/docs/getting-started#installation",children:"Get started with Hardhat"})," for general installation and overview."]}),"\n",(0,t.jsx)(r.h2,{id:"config-hardhat-for-gnosis",children:"Config Hardhat for Gnosis"}),"\n",(0,t.jsx)(r.p,{children:"Update the config with Gnosis networks, check the highlighted lines for instructions:"}),"\n",(0,t.jsxs)(s,{groupId:"languages",children:[(0,t.jsx)(e,{value:"typescript",label:"Typescript",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",metastring:'{6-8,14,44,55} showLineNumbers  title="hardhat.config.ts"',children:'import { HardhatUserConfig } from "hardhat/config";\r\nimport "@nomicfoundation/hardhat-toolbox";\r\n\r\n//https://hardhat.org/hardhat-runner/docs/config#json-rpc-based-networks\r\n\r\n//Note: keep your mnemonic and private keys securely\r\n//Read more: https://hardhat.org/hardhat-runner/docs/config#hd-wallet-config\r\n//1) You can configure private keys or mnemonic:\r\n//let accounts = ["your private key here"]\r\nlet accounts = { mnemonic: "your mnemonic here", }\r\n\r\nconst config: HardhatUserConfig = {\r\n  solidity: "0.8.17",\r\n  //2) select the default network "gnosis" or "chiado"\r\n  defaultNetwork: "gnosis",\r\n  networks: {\r\n    hardhat: {\r\n    },\r\n    gnosis: {\r\n      url: "https://rpc.gnosischain.com",\r\n      accounts: accounts,\r\n    },\r\n    chiado: {\r\n      url: "https://rpc.chiadochain.net",\r\n      gasPrice: 1000000000,\r\n      accounts: accounts,\r\n    },\r\n  },\r\n  etherscan: {\r\n    customChains: [\r\n      {\r\n        network: "chiado",\r\n        chainId: 10200,\r\n        urls: {\r\n          //Blockscout\r\n          apiURL: "https://blockscout.com/gnosis/chiado/api",\r\n          browserURL: "https://blockscout.com/gnosis/chiado",\r\n        },\r\n      },\r\n      {\r\n        network: "gnosis",\r\n        chainId: 100,\r\n        urls: {\r\n          // 3) Select to what explorer verify the contracts\r\n          // Gnosisscan\r\n          apiURL: "https://api.gnosisscan.io/api",\r\n          browserURL: "https://gnosisscan.io/",\r\n          // Blockscout\r\n          //apiURL: "https://blockscout.com/xdai/mainnet/api",\r\n          //browserURL: "https://blockscout.com/xdai/mainnet",\r\n        },\r\n      },\r\n    ],\r\n    apiKey: {\r\n      //4) Insert your Gnosisscan API key\r\n      //blockscout explorer verification does not require keys\r\n      chiado: "your key",\r\n      gnosis: "your key",\r\n    },\r\n  }\r\n};\r\n\r\nexport default config;\r\n\n'})})}),(0,t.jsx)(e,{value:"javascript",label:"Javascript",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",metastring:'{5-7,14,44,55} showLineNumbers  title="hardhat.config.js"',children:'require("@nomicfoundation/hardhat-toolbox");\r\n\r\n//https://hardhat.org/hardhat-runner/docs/config#json-rpc-based-networks\r\n\r\n//Note: keep your mnemonic and private keys securely\r\n//Read more: https://hardhat.org/hardhat-runner/docs/config#hd-wallet-config\r\n//1) You can configure private keys or mnemonic:\r\n//let accounts = ["your private key here"]\r\nlet accounts = { mnemonic: "your mnemonic here", }\r\n\r\n/** @type import(\'hardhat/config\').HardhatUserConfig */\r\nmodule.exports = {\r\n  solidity: "0.8.17",\r\n  //2) select the default network "gnosis" or "chiado"\r\n  defaultNetwork: "gnosis",\r\n  networks: {\r\n    hardhat: {\r\n    },\r\n    gnosis: {\r\n      url: "https://rpc.gnosischain.com",\r\n      accounts: accounts,\r\n    },\r\n    chiado: {\r\n      url: "https://rpc.chiadochain.net",\r\n      gasPrice: 1000000000,\r\n      accounts: accounts,\r\n    },\r\n  },\r\n  etherscan: {\r\n    customChains: [\r\n      {\r\n        network: "chiado",\r\n        chainId: 10200,\r\n        urls: {\r\n          //Blockscout\r\n          apiURL: "https://blockscout.com/gnosis/chiado/api",\r\n          browserURL: "https://blockscout.com/gnosis/chiado",\r\n        },\r\n      },\r\n      {\r\n        network: "gnosis",\r\n        chainId: 100,\r\n        urls: {\r\n          // 3) Select to what explorer verify the contracts\r\n          // Gnosisscan\r\n          apiURL: "https://api.gnosisscan.io/api",\r\n          browserURL: "https://gnosisscan.io/",\r\n          // Blockscout\r\n          //apiURL: "https://blockscout.com/xdai/mainnet/api",\r\n          //browserURL: "https://blockscout.com/xdai/mainnet",\r\n        },\r\n      },\r\n    ],\r\n    apiKey: {\r\n      //4) Insert your Gnosisscan API key\r\n      //blockscout explorer verification does not require keys\r\n      chiado: "your key",\r\n      gnosis: "your key",\r\n    },\r\n  }\r\n};\n'})})})]}),"\n",(0,t.jsx)(r.h2,{id:"compile-your-contract",children:"Compile your contract"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"npx hardhat compile\n"})}),"\n",(0,t.jsx)(r.h2,{id:"deploy-your-contract",children:"Deploy your contract"}),"\n",(0,t.jsxs)(s,{groupId:"languages",children:[(0,t.jsxs)(e,{value:"typescript",label:"Typescript",children:[(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",metastring:'title="Gnosis Mainnet"',children:"npx hardhat run scripts/deploy.ts --network gnosis\n"})}),(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",metastring:'title="Chiado Testnet"',children:"npx hardhat run scripts/deploy.ts --network chiado\n"})})]}),(0,t.jsxs)(e,{value:"javascript",label:"Javascript",children:[(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",metastring:'title="Gnosis Mainnet"',children:"npx hardhat run scripts/deploy.js --network gnosis\n"})}),(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",metastring:'title="Chiado Testnet"',children:"npx hardhat run scripts/deploy.js --network chiado\n"})})]})]}),"\n",(0,t.jsxs)(r.p,{children:["View your deployed contract on any of the ",(0,t.jsx)(r.a,{href:"/tools/explorers",children:"explorers"}),"."]}),"\n",(0,t.jsxs)(r.p,{children:["Visit our ",(0,t.jsx)(r.a,{href:"/tools",children:"Tools page"})," for other support."]}),"\n",(0,t.jsx)(r.h2,{id:"verify-contract",children:"Verify Contract"}),"\n",(0,t.jsxs)(s,{groupId:"networks",children:[(0,t.jsx)(e,{value:"chiado",label:"Chiado Testnet",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"npx hardhat verify --network chiado <deployed contract address>\n"})})}),(0,t.jsx)(e,{value:"gnosis",label:"Gnosis Mainnet",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"npx hardhat verify --network gnosis <deployed contract address>\n"})})})]}),"\n",(0,t.jsxs)(r.p,{children:["Visit our ",(0,t.jsx)(r.a,{href:"/developers/verify/",children:"Contract Verification Page"})," for more documentation on verification tools."]}),"\n",(0,t.jsx)(r.h2,{id:"additional-hardhat-documentation",children:"Additional Hardhat Documentation"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Additional Hardhat deployment documentation is located ",(0,t.jsx)(r.a,{href:"https://hardhat.org/hardhat-runner/docs/guides/deploying",children:"here"}),"."]}),"\n"]})]})}function l(n={}){const{wrapper:r}={...(0,o.R)(),...n.components};return r?(0,t.jsx)(r,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}function p(n,r){throw new Error("Expected "+(r?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(n,r,e)=>{e.d(r,{R:()=>a,x:()=>i});var t=e(96540);const o={},s=t.createContext(o);function a(n){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function i(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),t.createElement(s.Provider,{value:r},n.children)}}}]);